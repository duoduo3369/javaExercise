//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("MyQQModel", "FK_Users_BloodType", "BloodType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MyQQ.BloodType), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MyQQ.User), true)]
[assembly: EdmRelationshipAttribute("MyQQModel", "FK_Friends_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MyQQ.User), "Friends", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MyQQ.Friend), true)]
[assembly: EdmRelationshipAttribute("MyQQModel", "FK_Friends_Users1", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MyQQ.User), "Friends", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MyQQ.Friend), true)]
[assembly: EdmRelationshipAttribute("MyQQModel", "FK_Users_FriendshipPolicy", "FriendshipPolicy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MyQQ.FriendshipPolicy), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MyQQ.User), true)]
[assembly: EdmRelationshipAttribute("MyQQModel", "FK_Messages_MessageType", "MessageType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MyQQ.MessageType), "Messages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MyQQ.Message), true)]
[assembly: EdmRelationshipAttribute("MyQQModel", "FK_Messages_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MyQQ.User), "Messages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MyQQ.Message), true)]
[assembly: EdmRelationshipAttribute("MyQQModel", "FK_Messages_Users1", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MyQQ.User), "Messages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MyQQ.Message), true)]
[assembly: EdmRelationshipAttribute("MyQQModel", "FK_Users_Star", "Star", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MyQQ.Star), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MyQQ.User), true)]
[assembly: EdmRelationshipAttribute("MyQQModel", "FK_UserInfo_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MyQQ.User), "UserInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MyQQ.UserInfo), true)]

#endregion

namespace MyQQ
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class MyQQEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“MyQQEntities”部分中的连接字符串初始化新 MyQQEntities 对象。
        /// </summary>
        public MyQQEntities() : base("name=MyQQEntities", "MyQQEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 MyQQEntities 对象。
        /// </summary>
        public MyQQEntities(string connectionString) : base(connectionString, "MyQQEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 MyQQEntities 对象。
        /// </summary>
        public MyQQEntities(EntityConnection connection) : base(connection, "MyQQEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<BloodType> BloodTypes
        {
            get
            {
                if ((_BloodTypes == null))
                {
                    _BloodTypes = base.CreateObjectSet<BloodType>("BloodTypes");
                }
                return _BloodTypes;
            }
        }
        private ObjectSet<BloodType> _BloodTypes;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Friend> Friends
        {
            get
            {
                if ((_Friends == null))
                {
                    _Friends = base.CreateObjectSet<Friend>("Friends");
                }
                return _Friends;
            }
        }
        private ObjectSet<Friend> _Friends;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<FriendshipPolicy> FriendshipPolicies
        {
            get
            {
                if ((_FriendshipPolicies == null))
                {
                    _FriendshipPolicies = base.CreateObjectSet<FriendshipPolicy>("FriendshipPolicies");
                }
                return _FriendshipPolicies;
            }
        }
        private ObjectSet<FriendshipPolicy> _FriendshipPolicies;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<MessageType> MessageTypes
        {
            get
            {
                if ((_MessageTypes == null))
                {
                    _MessageTypes = base.CreateObjectSet<MessageType>("MessageTypes");
                }
                return _MessageTypes;
            }
        }
        private ObjectSet<MessageType> _MessageTypes;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Star> Stars
        {
            get
            {
                if ((_Stars == null))
                {
                    _Stars = base.CreateObjectSet<Star>("Stars");
                }
                return _Stars;
            }
        }
        private ObjectSet<Star> _Stars;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserInfo> UserInfoes
        {
            get
            {
                if ((_UserInfoes == null))
                {
                    _UserInfoes = base.CreateObjectSet<UserInfo>("UserInfoes");
                }
                return _UserInfoes;
            }
        }
        private ObjectSet<UserInfo> _UserInfoes;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 BloodTypes EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToBloodTypes(BloodType bloodType)
        {
            base.AddObject("BloodTypes", bloodType);
        }
    
        /// <summary>
        /// 用于向 Friends EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToFriends(Friend friend)
        {
            base.AddObject("Friends", friend);
        }
    
        /// <summary>
        /// 用于向 FriendshipPolicies EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToFriendshipPolicies(FriendshipPolicy friendshipPolicy)
        {
            base.AddObject("FriendshipPolicies", friendshipPolicy);
        }
    
        /// <summary>
        /// 用于向 Messages EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    
        /// <summary>
        /// 用于向 MessageTypes EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMessageTypes(MessageType messageType)
        {
            base.AddObject("MessageTypes", messageType);
        }
    
        /// <summary>
        /// 用于向 Stars EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToStars(Star star)
        {
            base.AddObject("Stars", star);
        }
    
        /// <summary>
        /// 用于向 sysdiagrams EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// 用于向 Users EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// 用于向 UserInfoes EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserInfoes(UserInfo userInfo)
        {
            base.AddObject("UserInfoes", userInfo);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MyQQModel", Name="BloodType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BloodType : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 BloodType 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="bloodType1">BloodType1 属性的初始值。</param>
        public static BloodType CreateBloodType(global::System.Int32 id, global::System.String bloodType1)
        {
            BloodType bloodType = new BloodType();
            bloodType.Id = id;
            bloodType.BloodType1 = bloodType1;
            return bloodType;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BloodType1
        {
            get
            {
                return _BloodType1;
            }
            set
            {
                OnBloodType1Changing(value);
                ReportPropertyChanging("BloodType1");
                _BloodType1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BloodType1");
                OnBloodType1Changed();
            }
        }
        private global::System.String _BloodType1;
        partial void OnBloodType1Changing(global::System.String value);
        partial void OnBloodType1Changed();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyQQModel", "FK_Users_BloodType", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("MyQQModel.FK_Users_BloodType", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("MyQQModel.FK_Users_BloodType", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MyQQModel", Name="Friend")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Friend : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Friend 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="hostId">HostId 属性的初始值。</param>
        /// <param name="friendId">FriendId 属性的初始值。</param>
        public static Friend CreateFriend(global::System.Int32 id, global::System.Int32 hostId, global::System.Int32 friendId)
        {
            Friend friend = new Friend();
            friend.Id = id;
            friend.HostId = hostId;
            friend.FriendId = friendId;
            return friend;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HostId
        {
            get
            {
                return _HostId;
            }
            set
            {
                OnHostIdChanging(value);
                ReportPropertyChanging("HostId");
                _HostId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HostId");
                OnHostIdChanged();
            }
        }
        private global::System.Int32 _HostId;
        partial void OnHostIdChanging(global::System.Int32 value);
        partial void OnHostIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FriendId
        {
            get
            {
                return _FriendId;
            }
            set
            {
                OnFriendIdChanging(value);
                ReportPropertyChanging("FriendId");
                _FriendId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FriendId");
                OnFriendIdChanged();
            }
        }
        private global::System.Int32 _FriendId;
        partial void OnFriendIdChanging(global::System.Int32 value);
        partial void OnFriendIdChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyQQModel", "FK_Friends_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MyQQModel.FK_Friends_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MyQQModel.FK_Friends_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MyQQModel.FK_Friends_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MyQQModel.FK_Friends_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyQQModel", "FK_Friends_Users1", "Users")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MyQQModel.FK_Friends_Users1", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MyQQModel.FK_Friends_Users1", "Users").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MyQQModel.FK_Friends_Users1", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MyQQModel.FK_Friends_Users1", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MyQQModel", Name="FriendshipPolicy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FriendshipPolicy : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 FriendshipPolicy 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="friendshipPolicy1">FriendshipPolicy1 属性的初始值。</param>
        public static FriendshipPolicy CreateFriendshipPolicy(global::System.Int32 id, global::System.String friendshipPolicy1)
        {
            FriendshipPolicy friendshipPolicy = new FriendshipPolicy();
            friendshipPolicy.Id = id;
            friendshipPolicy.FriendshipPolicy1 = friendshipPolicy1;
            return friendshipPolicy;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FriendshipPolicy1
        {
            get
            {
                return _FriendshipPolicy1;
            }
            set
            {
                OnFriendshipPolicy1Changing(value);
                ReportPropertyChanging("FriendshipPolicy1");
                _FriendshipPolicy1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FriendshipPolicy1");
                OnFriendshipPolicy1Changed();
            }
        }
        private global::System.String _FriendshipPolicy1;
        partial void OnFriendshipPolicy1Changing(global::System.String value);
        partial void OnFriendshipPolicy1Changed();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyQQModel", "FK_Users_FriendshipPolicy", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("MyQQModel.FK_Users_FriendshipPolicy", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("MyQQModel.FK_Users_FriendshipPolicy", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MyQQModel", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Message 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="fromUserId">FromUserId 属性的初始值。</param>
        /// <param name="toUserId">ToUserId 属性的初始值。</param>
        /// <param name="messageTypeId">MessageTypeId 属性的初始值。</param>
        /// <param name="messageState">MessageState 属性的初始值。</param>
        /// <param name="messageTime">MessageTime 属性的初始值。</param>
        public static Message CreateMessage(global::System.Int32 id, global::System.Int32 fromUserId, global::System.Int32 toUserId, global::System.Int32 messageTypeId, global::System.Int32 messageState, global::System.DateTime messageTime)
        {
            Message message = new Message();
            message.Id = id;
            message.FromUserId = fromUserId;
            message.ToUserId = toUserId;
            message.MessageTypeId = messageTypeId;
            message.MessageState = messageState;
            message.MessageTime = messageTime;
            return message;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FromUserId
        {
            get
            {
                return _FromUserId;
            }
            set
            {
                OnFromUserIdChanging(value);
                ReportPropertyChanging("FromUserId");
                _FromUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromUserId");
                OnFromUserIdChanged();
            }
        }
        private global::System.Int32 _FromUserId;
        partial void OnFromUserIdChanging(global::System.Int32 value);
        partial void OnFromUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToUserId
        {
            get
            {
                return _ToUserId;
            }
            set
            {
                OnToUserIdChanging(value);
                ReportPropertyChanging("ToUserId");
                _ToUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToUserId");
                OnToUserIdChanged();
            }
        }
        private global::System.Int32 _ToUserId;
        partial void OnToUserIdChanging(global::System.Int32 value);
        partial void OnToUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message1
        {
            get
            {
                return _Message1;
            }
            set
            {
                OnMessage1Changing(value);
                ReportPropertyChanging("Message1");
                _Message1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message1");
                OnMessage1Changed();
            }
        }
        private global::System.String _Message1;
        partial void OnMessage1Changing(global::System.String value);
        partial void OnMessage1Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageTypeId
        {
            get
            {
                return _MessageTypeId;
            }
            set
            {
                OnMessageTypeIdChanging(value);
                ReportPropertyChanging("MessageTypeId");
                _MessageTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageTypeId");
                OnMessageTypeIdChanged();
            }
        }
        private global::System.Int32 _MessageTypeId;
        partial void OnMessageTypeIdChanging(global::System.Int32 value);
        partial void OnMessageTypeIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageState
        {
            get
            {
                return _MessageState;
            }
            set
            {
                OnMessageStateChanging(value);
                ReportPropertyChanging("MessageState");
                _MessageState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageState");
                OnMessageStateChanged();
            }
        }
        private global::System.Int32 _MessageState;
        partial void OnMessageStateChanging(global::System.Int32 value);
        partial void OnMessageStateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MessageTime
        {
            get
            {
                return _MessageTime;
            }
            set
            {
                OnMessageTimeChanging(value);
                ReportPropertyChanging("MessageTime");
                _MessageTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageTime");
                OnMessageTimeChanged();
            }
        }
        private global::System.DateTime _MessageTime;
        partial void OnMessageTimeChanging(global::System.DateTime value);
        partial void OnMessageTimeChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyQQModel", "FK_Messages_MessageType", "MessageType")]
        public MessageType MessageType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MessageType>("MyQQModel.FK_Messages_MessageType", "MessageType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MessageType>("MyQQModel.FK_Messages_MessageType", "MessageType").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MessageType> MessageTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MessageType>("MyQQModel.FK_Messages_MessageType", "MessageType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MessageType>("MyQQModel.FK_Messages_MessageType", "MessageType", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyQQModel", "FK_Messages_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MyQQModel.FK_Messages_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MyQQModel.FK_Messages_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MyQQModel.FK_Messages_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MyQQModel.FK_Messages_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyQQModel", "FK_Messages_Users1", "Users")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MyQQModel.FK_Messages_Users1", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MyQQModel.FK_Messages_Users1", "Users").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MyQQModel.FK_Messages_Users1", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MyQQModel.FK_Messages_Users1", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MyQQModel", Name="MessageType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MessageType : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 MessageType 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="messageType1">MessageType1 属性的初始值。</param>
        public static MessageType CreateMessageType(global::System.Int32 id, global::System.String messageType1)
        {
            MessageType messageType = new MessageType();
            messageType.Id = id;
            messageType.MessageType1 = messageType1;
            return messageType;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MessageType1
        {
            get
            {
                return _MessageType1;
            }
            set
            {
                OnMessageType1Changing(value);
                ReportPropertyChanging("MessageType1");
                _MessageType1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MessageType1");
                OnMessageType1Changed();
            }
        }
        private global::System.String _MessageType1;
        partial void OnMessageType1Changing(global::System.String value);
        partial void OnMessageType1Changed();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyQQModel", "FK_Messages_MessageType", "Messages")]
        public EntityCollection<Message> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("MyQQModel.FK_Messages_MessageType", "Messages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("MyQQModel.FK_Messages_MessageType", "Messages", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MyQQModel", Name="Star")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Star : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Star 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="star1">Star1 属性的初始值。</param>
        public static Star CreateStar(global::System.Int32 id, global::System.String star1)
        {
            Star star = new Star();
            star.Id = id;
            star.Star1 = star1;
            return star;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Star1
        {
            get
            {
                return _Star1;
            }
            set
            {
                OnStar1Changing(value);
                ReportPropertyChanging("Star1");
                _Star1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Star1");
                OnStar1Changed();
            }
        }
        private global::System.String _Star1;
        partial void OnStar1Changing(global::System.String value);
        partial void OnStar1Changed();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyQQModel", "FK_Users_Star", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("MyQQModel.FK_Users_Star", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("MyQQModel.FK_Users_Star", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MyQQModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 sysdiagram 对象。
        /// </summary>
        /// <param name="name">name 属性的初始值。</param>
        /// <param name="principal_id">principal_id 属性的初始值。</param>
        /// <param name="diagram_id">diagram_id 属性的初始值。</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MyQQModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 User 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="loginPwd">LoginPwd 属性的初始值。</param>
        /// <param name="friendshipPolicyId">FriendshipPolicyId 属性的初始值。</param>
        /// <param name="nickName">NickName 属性的初始值。</param>
        /// <param name="faceId">FaceId 属性的初始值。</param>
        /// <param name="sex">Sex 属性的初始值。</param>
        /// <param name="age">Age 属性的初始值。</param>
        public static User CreateUser(global::System.Int32 id, global::System.String loginPwd, global::System.Int32 friendshipPolicyId, global::System.String nickName, global::System.Int32 faceId, global::System.String sex, global::System.Int32 age)
        {
            User user = new User();
            user.Id = id;
            user.LoginPwd = loginPwd;
            user.FriendshipPolicyId = friendshipPolicyId;
            user.NickName = nickName;
            user.FaceId = faceId;
            user.Sex = sex;
            user.Age = age;
            return user;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginPwd
        {
            get
            {
                return _LoginPwd;
            }
            set
            {
                OnLoginPwdChanging(value);
                ReportPropertyChanging("LoginPwd");
                _LoginPwd = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoginPwd");
                OnLoginPwdChanged();
            }
        }
        private global::System.String _LoginPwd;
        partial void OnLoginPwdChanging(global::System.String value);
        partial void OnLoginPwdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FriendshipPolicyId
        {
            get
            {
                return _FriendshipPolicyId;
            }
            set
            {
                OnFriendshipPolicyIdChanging(value);
                ReportPropertyChanging("FriendshipPolicyId");
                _FriendshipPolicyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FriendshipPolicyId");
                OnFriendshipPolicyIdChanged();
            }
        }
        private global::System.Int32 _FriendshipPolicyId;
        partial void OnFriendshipPolicyIdChanging(global::System.Int32 value);
        partial void OnFriendshipPolicyIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NickName
        {
            get
            {
                return _NickName;
            }
            set
            {
                OnNickNameChanging(value);
                ReportPropertyChanging("NickName");
                _NickName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NickName");
                OnNickNameChanged();
            }
        }
        private global::System.String _NickName;
        partial void OnNickNameChanging(global::System.String value);
        partial void OnNickNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FaceId
        {
            get
            {
                return _FaceId;
            }
            set
            {
                OnFaceIdChanging(value);
                ReportPropertyChanging("FaceId");
                _FaceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FaceId");
                OnFaceIdChanged();
            }
        }
        private global::System.Int32 _FaceId;
        partial void OnFaceIdChanging(global::System.Int32 value);
        partial void OnFaceIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                OnSexChanging(value);
                ReportPropertyChanging("Sex");
                _Sex = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Sex");
                OnSexChanged();
            }
        }
        private global::System.String _Sex;
        partial void OnSexChanging(global::System.String value);
        partial void OnSexChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private global::System.Int32 _Age;
        partial void OnAgeChanging(global::System.Int32 value);
        partial void OnAgeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StarId
        {
            get
            {
                return _StarId;
            }
            set
            {
                OnStarIdChanging(value);
                ReportPropertyChanging("StarId");
                _StarId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StarId");
                OnStarIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StarId;
        partial void OnStarIdChanging(Nullable<global::System.Int32> value);
        partial void OnStarIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BloodTypeId
        {
            get
            {
                return _BloodTypeId;
            }
            set
            {
                OnBloodTypeIdChanging(value);
                ReportPropertyChanging("BloodTypeId");
                _BloodTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BloodTypeId");
                OnBloodTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BloodTypeId;
        partial void OnBloodTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnBloodTypeIdChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyQQModel", "FK_Users_BloodType", "BloodType")]
        public BloodType BloodType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BloodType>("MyQQModel.FK_Users_BloodType", "BloodType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BloodType>("MyQQModel.FK_Users_BloodType", "BloodType").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BloodType> BloodTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BloodType>("MyQQModel.FK_Users_BloodType", "BloodType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BloodType>("MyQQModel.FK_Users_BloodType", "BloodType", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyQQModel", "FK_Friends_Users", "Friends")]
        public EntityCollection<Friend> Friends
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Friend>("MyQQModel.FK_Friends_Users", "Friends");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Friend>("MyQQModel.FK_Friends_Users", "Friends", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyQQModel", "FK_Friends_Users1", "Friends")]
        public EntityCollection<Friend> Friends1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Friend>("MyQQModel.FK_Friends_Users1", "Friends");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Friend>("MyQQModel.FK_Friends_Users1", "Friends", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyQQModel", "FK_Users_FriendshipPolicy", "FriendshipPolicy")]
        public FriendshipPolicy FriendshipPolicy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FriendshipPolicy>("MyQQModel.FK_Users_FriendshipPolicy", "FriendshipPolicy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FriendshipPolicy>("MyQQModel.FK_Users_FriendshipPolicy", "FriendshipPolicy").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FriendshipPolicy> FriendshipPolicyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FriendshipPolicy>("MyQQModel.FK_Users_FriendshipPolicy", "FriendshipPolicy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FriendshipPolicy>("MyQQModel.FK_Users_FriendshipPolicy", "FriendshipPolicy", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyQQModel", "FK_Messages_Users", "Messages")]
        public EntityCollection<Message> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("MyQQModel.FK_Messages_Users", "Messages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("MyQQModel.FK_Messages_Users", "Messages", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyQQModel", "FK_Messages_Users1", "Messages")]
        public EntityCollection<Message> Messages1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("MyQQModel.FK_Messages_Users1", "Messages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("MyQQModel.FK_Messages_Users1", "Messages", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyQQModel", "FK_Users_Star", "Star")]
        public Star Star
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Star>("MyQQModel.FK_Users_Star", "Star").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Star>("MyQQModel.FK_Users_Star", "Star").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Star> StarReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Star>("MyQQModel.FK_Users_Star", "Star");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Star>("MyQQModel.FK_Users_Star", "Star", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyQQModel", "FK_UserInfo_Users", "UserInfo")]
        public UserInfo UserInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("MyQQModel.FK_UserInfo_Users", "UserInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("MyQQModel.FK_UserInfo_Users", "UserInfo").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserInfo> UserInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("MyQQModel.FK_UserInfo_Users", "UserInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserInfo>("MyQQModel.FK_UserInfo_Users", "UserInfo", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MyQQModel", Name="UserInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserInfo 对象。
        /// </summary>
        /// <param name="userId">userId 属性的初始值。</param>
        /// <param name="isLogin">isLogin 属性的初始值。</param>
        public static UserInfo CreateUserInfo(global::System.Int32 userId, global::System.String isLogin)
        {
            UserInfo userInfo = new UserInfo();
            userInfo.userId = userId;
            userInfo.isLogin = isLogin;
            return userInfo;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userId
        {
            get
            {
                return _userId;
            }
            set
            {
                if (_userId != value)
                {
                    OnuserIdChanging(value);
                    ReportPropertyChanging("userId");
                    _userId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("userId");
                    OnuserIdChanged();
                }
            }
        }
        private global::System.Int32 _userId;
        partial void OnuserIdChanging(global::System.Int32 value);
        partial void OnuserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String isLogin
        {
            get
            {
                return _isLogin;
            }
            set
            {
                OnisLoginChanging(value);
                ReportPropertyChanging("isLogin");
                _isLogin = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("isLogin");
                OnisLoginChanged();
            }
        }
        private global::System.String _isLogin;
        partial void OnisLoginChanging(global::System.String value);
        partial void OnisLoginChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyQQModel", "FK_UserInfo_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MyQQModel.FK_UserInfo_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MyQQModel.FK_UserInfo_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MyQQModel.FK_UserInfo_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MyQQModel.FK_UserInfo_Users", "User", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
